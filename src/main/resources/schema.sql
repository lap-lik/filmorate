-- DROP TABLE IF EXISTS likes;
-- DROP TABLE IF EXISTS friendships;
-- DROP TABLE IF EXISTS film_genre;
-- DROP TABLE IF EXISTS users;
-- DROP TABLE IF EXISTS films;

CREATE TABLE IF NOT EXISTS users
(
    id       INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    email    VARCHAR(50) NOT NULL,
    login    VARCHAR(50) NOT NULL,
    name     VARCHAR(50) NOT NULL,
    birthday DATE        NOT NULL
);

CREATE TABLE IF NOT EXISTS mpa
(
    id   INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(50) UNIQUE NOT NULL
);

CREATE TABLE IF NOT EXISTS films
(
    id           INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name         VARCHAR(50) NOT NULL,
    description  VARCHAR(200),
    release_date DATE,
    duration     INTEGER,
    rate         INTEGER,
    mpa_id       INTEGER     REFERENCES mpa (id) ON DELETE SET NULL
);

CREATE TABLE IF NOT EXISTS genres
(
    id   INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(50) UNIQUE NOT NULL
);

CREATE TABLE IF NOT EXISTS likes
(
    id      INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    film_id INTEGER NOT NULL REFERENCES films (id) ON DELETE CASCADE,
    user_id INTEGER NOT NULL REFERENCES users (id) ON DELETE CASCADE,
    FOREIGN KEY (film_id) REFERENCES films (id),
    FOREIGN KEY (user_id) REFERENCES users (id)
);

CREATE TABLE IF NOT EXISTS friendships
(
    id                INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_1            INTEGER NOT NULL,
    user_2            INTEGER NOT NULL,
    friendship_status BOOLEAN,
    FOREIGN KEY (user_1) REFERENCES users (id),
    FOREIGN KEY (user_2) REFERENCES users (id)
);

CREATE TABLE IF NOT EXISTS film_genre
(
    film_id  INTEGER NOT NULL REFERENCES films (id) ON DELETE CASCADE,
    genre_id INTEGER NOT NULL REFERENCES genres (id) ON DELETE CASCADE,
    FOREIGN KEY (film_id) REFERENCES films (id),
    FOREIGN KEY (genre_id) REFERENCES genres (id)
);